<v:ReactiveUserControl
    x:Class="Nodis.Frontend.Views.MarketplacePage" xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ail="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:ip="https://github.com/MahApps/IconPacks.Avalonia"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:suki="https://github.com/kikipoulet/SukiUI"
    xmlns:v="clr-namespace:Nodis.Frontend.Views" xmlns:vm="clr-namespace:Nodis.Frontend.ViewModels"
    d:DesignHeight="450" d:DesignWidth="800"
    x:DataType="vm:MarketplacePageViewModel" x:TypeArguments="vm:MarketplacePageViewModel"
    mc:Ignorable="d">
    <Grid ColumnDefinitions="1*,3*" RowDefinitions="Auto,*">
        <DockPanel
            Grid.Row="0" Grid.Column="0"
            Grid.ColumnSpan="2" Height="36"
            Margin="5" LastChildFill="True">
            <Button
                DockPanel.Dock="Left" VerticalAlignment="Stretch"
                Classes="Flat"
                Command="{Binding RefreshSourcesCommand}">
                <StackPanel Orientation="Horizontal" Spacing="4">
                    <ip:PackIconEvaIcons
                        Width="12" Height="12"
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Kind="Refresh"/>
                    <TextBlock VerticalAlignment="Center" Text="Refresh"/>
                </StackPanel>
            </Button>
            <TextBox
                MinHeight="32" Margin="5,0,0,0"
                VerticalAlignment="Stretch" suki:TextBoxExtensions.AddDeleteButton="True"
                Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Watermark="Search Nodes"/>
        </DockPanel>

        <suki:GlassCard
            Grid.Row="1" Grid.Column="0"
            Margin="5,0,0,5" Padding="0"
            CornerRadius="8">
            <ListBox
                Classes="Compact"
                ItemsSource="{Binding Bundles}"
                SelectedItem="{Binding SelectedBundle}">
                <ListBox.Styles>
                    <Style Selector="TextBlock">
                        <Setter Property="Foreground" Value="{DynamicResource SukiText}"/>
                    </Style>

                    <Style Selector="ListBoxItem">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="4,2"/>
                        <Setter Property="Template">
                            <ControlTemplate>
                                <Border
                                    Name="BorderBasicStyle" Margin="0"
                                    Padding="8,4" CornerRadius="8">
                                    <ContentPresenter
                                        Name="PART_ContentPresenter" Margin="0,0,0,0"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Background="Transparent" BorderBrush="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        CornerRadius="{TemplateBinding CornerRadius}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter>
                    </Style>
                </ListBox.Styles>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid ColumnDefinitions="32,*" RowDefinitions="32,*">
                            <Image
                                Grid.Row="0" Grid.Column="0"
                                ail:ImageLoader.Source="{Binding BundleManifest.Icon, Mode=OneWay}"/>

                            <TextBlock
                                Grid.Row="0" Grid.Column="1"
                                Margin="8,0,0,0" VerticalAlignment="Center"
                                Classes="h4"
                                Text="{Binding Title}"/>
                            <TextBlock
                                Grid.Row="1" Grid.Column="0"
                                Grid.ColumnSpan="2" Margin="0,4,0,0"
                                Classes="h5" MaxLines="3"
                                Text="{Binding BundleManifest.Description}"
                                TextTrimming="{x:Static TextTrimming.CharacterEllipsis}"
                                TextWrapping="Wrap"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </suki:GlassCard>

        <suki:GlassCard
            Grid.Row="1" Grid.Column="1"
            Margin="5,0,5,5" Padding="0"
            CornerRadius="8">
            <Grid RowDefinitions="*,1,Auto">
                <ScrollViewer
                    Grid.Row="0" HorizontalScrollBarVisibility="Disabled"
                    VerticalScrollBarVisibility="Auto">
                    <v:MarkdownViewer Margin="5,0" Markdown="{Binding SelectedBundle.ReadmeMarkdown.Value, FallbackValue={x:Null}}"/>
                </ScrollViewer>

                <Border Grid.Row="1" Background="{DynamicResource SukiControlBorderBrush}"/>

                <StackPanel
                    Grid.Row="2" Height="48"
                    HorizontalAlignment="Right" Orientation="Horizontal">
                    <ComboBox
                        MinWidth="120" Margin="0,5"
                        VerticalAlignment="Stretch"
                        IsEnabled="{Binding SelectedBundle, Converter={x:Static ObjectConverters.IsNotNull}}"
                        ItemsSource="{Binding SelectedBundle.Versions, FallbackValue={x:Null}}"
                        SelectedItem="{Binding SelectedBundle.SelectedVersion, FallbackValue={x:Null}}"/>

                    <Button
                        Margin="5" Padding="8,2"
                        VerticalAlignment="Stretch" Classes="Flat"
                        Command="{Binding EditBundleEnvironmentVariablesCommand}">
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <ip:PackIconEvaIcons
                                Width="12" Height="12"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Kind="Hash"/>
                            <TextBlock VerticalAlignment="Center" Text="Edit Environment Variables"/>
                        </StackPanel>
                    </Button>

                    <Button
                        Margin="0,5,5,5" Padding="8,2"
                        VerticalAlignment="Stretch" Classes="Flat"
                        Command="{Binding InstallBundleCommand}">
                        <StackPanel Orientation="Horizontal" Spacing="4">
                            <ip:PackIconEvaIcons
                                Width="12" Height="12"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Kind="Download"/>
                            <TextBlock VerticalAlignment="Center" Text="Install"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>
        </suki:GlassCard>
    </Grid>
</v:ReactiveUserControl>